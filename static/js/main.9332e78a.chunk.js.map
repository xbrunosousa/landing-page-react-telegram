{"version":3,"sources":["assets/telegram-mac-os-screenshot-min.png","components/Navbar.js","components/BannerHome.js","components/ContentApp.js","components/Pros.js","services/api.js","components/Blog.js","components/Featured.js","components/Footer.js","views/Home.js","registerServiceWorker.js","index.js"],"names":["module","exports","NavbarApp","state","isOpen","className","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","setState","Collapse","this","navbar","Nav","NavItem","NavLink","Component","target","rel","Button","size","alt","src","bannerTelegramMac","title","frameBorder","allowFullScreen","Container","Row","Col","sm","axios","create","baseURL","Blog","props","componentDidMount","isLoading","getPosts","API","get","then","res","post","data","getImgWithRegex","text","results","RegExp","exec","render","map","key","CardImg","top","width","content","rendered","CardSubtitle","format","date","CardTitle","replace","excerpt","substr","guid","CardBody","Date","getFullYear","Home","ReactGA","initialize","pageview","window","location","pathname","search","BannerHome","ContentApp","Pros","Featured","Footer","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.9332e78a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/telegram-mac-os-screenshot-min.f443ca02.png\";","import React, { Component } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink\n} from 'reactstrap';\n\nclass NavbarApp extends Component {\n  state = { isOpen: false };\n\n  render() {\n    return (\n      <div className='navbar-app'>\n        <div className='container'>\n          <Navbar color='light' light expand='md'>\n            <NavbarBrand href='#'>\n              <i className='fab fa-telegram'></i> telegram\n            </NavbarBrand>\n            <NavbarToggler\n              onClick={() => this.setState({ isOpen: !this.state.isOpen })}\n            />\n            <Collapse isOpen={this.state.isOpen} navbar>\n              <Nav className='ml-auto' navbar>\n                <NavItem>\n                  <NavLink href='#'>Home</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink href='#'>FAQ</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink href='#'>Apps</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink href='#'>API</NavLink>\n                </NavItem>\n              </Nav>\n            </Collapse>\n          </Navbar>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NavbarApp;\n","import React from 'react';\nimport { Button } from 'reactstrap';\nimport bannerTelegramMac from 'assets/telegram-mac-os-screenshot-min.png';\n\nexport default () => (\n  <div className='container'>\n    <div className='BannerHomeApp'>\n      <p className='banner--init'>\n        A nova era das <span>mensagens</span>\n      </p>\n      <p className='banner--sub'>\n        Telegram é um aplicativo de mensagens móveis e desktop baseado em nuvem\n        com foco em segurança e velocidade.\n      </p>\n      <div className='row'>\n        <div className='banner--buttons'>\n          <a\n            href='https://telegram.org/apps'\n            target='_blank'\n            rel='noopener noreferrer'\n          >\n            <Button className='banner--buttons__download' size='sm'>\n              Download\n            </Button>\n          </a>\n          <a\n            href='https://web.telegram.org'\n            target='_blank'\n            rel='noopener noreferrer'\n          >\n            <Button className='banner--buttons__web' size='sm'>\n              Telegram WEB\n            </Button>\n          </a>\n        </div>\n      </div>\n      <img\n        alt='Telegram Mac OS'\n        src={bannerTelegramMac}\n        className='banner--telegramMac'\n      />\n    </div>\n  </div>\n);\n","import React from 'react';\n\nexport default () => (\n  <div className='ContentApp'>\n    <div className='container'>\n      <p className='ContentApp--title-section'>\n        O que você pode fazer com Telegram?\n      </p>\n      <span className='ContentApp--subtitle-section'>\n        Fácil para suas conversas pessoais e de negócios\n      </span>\n      <div className='row'>\n        <div className='col-sm-4'>\n          <div className='ContentApp--items'>\n            <p>\n              <i className='far fa-file-code'></i>\n            </p>\n            <span className='ContentApp--title-icon'>Envie</span>\n            <p className='ContentApp--subtitle-icon'>\n              arquivos de quaisquer tipos.\n            </p>\n          </div>\n\n          <div className='ContentApp--items'>\n            <p>\n              <i className='fas fa-users'></i>\n            </p>\n            <span className='ContentApp--title-icon'>Grupos</span>\n            <p className='ContentApp--subtitle-icon'>com até 10000 membros</p>\n          </div>\n\n          <div className='ContentApp--items'>\n            <p>\n              <i className='fas fa-sync'></i>\n            </p>\n\n            <span className='ContentApp--title-icon'>Sincronize</span>\n            <p className='ContentApp--subtitle-icon'>\n              suas conversas em todos seus dispositivos\n            </p>\n          </div>\n        </div>\n\n        <div className='col-sm-4'>\n          <div className='ContentApp--items'>\n            <p>\n              <i className='fas fa-lock'></i>\n            </p>\n            <span className='ContentApp--title-icon'>Secreto</span>\n            <p className='ContentApp--subtitle-icon'>\n              segredos pessoais e comerciais.\n            </p>\n          </div>\n\n          <div className='ContentApp--items'>\n            <p>\n              <i className='fas fa-wrench'></i>\n            </p>\n            <span className='ContentApp--title-icon'>Construa</span>\n            <p className='ContentApp--subtitle-icon'>\n              suas ferramentas com nossa API.\n            </p>\n          </div>\n          <div className='ContentApp--items'>\n            <p>\n              <i className='fas fa-comments'></i>\n            </p>\n            <span className='ContentApp--title-icon'>Avaliações</span>\n            <p className='ContentApp--subtitle-icon'>\n              receba de seus clientes.\n            </p>\n          </div>\n        </div>\n\n        <div className='col-sm-4'>\n          <div className='ContentApp--items'>\n            <p>\n              <i className='fas fa-cloud'></i>\n            </p>\n            <span className='ContentApp--title-icon'>Guarde</span>\n            <p className='ContentApp--subtitle-icon'>seus arquivos na nuvem</p>\n          </div>\n\n          <div className='ContentApp--items'>\n            <p>\n              <i className='fas fa-bomb'></i>\n            </p>\n            <span className='ContentApp--title-icon'>Destrua</span>\n            <p className='ContentApp--subtitle-icon'>\n              mensagens com tempo pre-definido\n            </p>\n          </div>\n          <div className='ContentApp--items'>\n            <p>\n              <i className='fas fa-location-arrow'></i>\n            </p>\n            <span className='ContentApp--title-icon'>Conecte-se</span>\n            <p className='ContentApp--subtitle-icon'>\n              das localizações mais remotas\n            </p>\n          </div>\n        </div>\n      </div>\n      <div className='vimeo'>\n        <iframe\n          title='Telegram on Vimeo'\n          src='http://bit.ly/32R70DO'\n          frameBorder='0'\n          allowFullScreen\n        />\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport { Col, Row, Container } from 'reactstrap';\n\nexport default () => (\n  <div className='ContentApp2'>\n    <Container>\n      <p className='ContentApp--title-section'>\n        Por que mudar para o Telegram?\n      </p>\n      <span className='ContentApp--subtitle-section'>\n        Você merece ter muito...\n      </span>\n      <Row>\n        <Col sm={{ size: 4 }}>\n          <div className='ContentApp--items'>\n            <p>\n              <i className='fas fa-user-secret'></i>\n            </p>\n            <span className='ContentApp--title-icon'>Privado</span>\n            <p className='ContentApp--subtitle-icon'>\n              mensagens no Telegram são fortemente criptografadas e podem se\n              auto-destruir.\n            </p>\n          </div>\n\n          <div className='ContentApp--items'>\n            <p>\n              <i className='fas fa-globe-americas'></i>\n            </p>\n            <span className='ContentApp--title-icon'>Distribuído</span>\n            <p className='ContentApp--subtitle-icon'>\n              servidores de Telegram estão espalhados por todo o mundo, por\n              segurança e velocidade.\n            </p>\n          </div>\n\n          <div className='ContentApp--items'>\n            <p>\n              <i className='fas fa-low-vision'></i>\n            </p>\n            <span className='ContentApp--title-icon'>Seguro</span>\n            <p className='ContentApp--subtitle-icon'>\n              Telegram mantém suas mensagens e arquivos contra{' '}\n              <span>ataques de hackers</span>.\n            </p>\n          </div>\n        </Col>\n\n        <Col sm={{ size: 4 }}>\n          <div className='ContentApp--items'>\n            <p>\n              <i className='fas fa-cloud'></i>\n            </p>\n            <span className='ContentApp--title-icon'>Baseado em nuvem</span>\n            <p className='ContentApp--subtitle-icon'>\n              O Telegram permite que você acesse suas mensagens de vários\n              dispositivos.\n            </p>\n          </div>\n\n          <div className='ContentApp--items'>\n            <p>\n              <i className='fas fa-lock-open'></i>\n            </p>\n            <span className='ContentApp--title-icon'>Aberto</span>\n            <p className='ContentApp--subtitle-icon'>\n              O Telegram tem uma <span>API</span> aberta e{' '}\n              <span>protocolo</span> livre para todos.\n            </p>\n          </div>\n\n          <div className='ContentApp--items'>\n            <p>\n              <i className='fas fa-database'></i>\n            </p>\n            <span className='ContentApp--title-icon'>Powerful</span>\n            <p className='ContentApp--subtitle-icon'>\n              O Telegram não tem limites para tamanho de arquivos e conversas.\n            </p>\n          </div>\n        </Col>\n\n        <Col sm={{ size: 4 }}>\n          <div className='ContentApp--items'>\n            <p>\n              <i className='fas fa-tachometer-alt'></i>\n            </p>\n            <span className='ContentApp--title-icon'>Rápido</span>\n            <p className='ContentApp--subtitle-icon'>\n              O Telegram entrega mensagens mais rápido que qualquer outro\n              aplicativo.\n            </p>\n          </div>\n\n          <div className='ContentApp--items'>\n            <p>\n              <i className='fas fa-money-bill-wave-alt'></i>\n            </p>\n            <span className='ContentApp--title-icon'>Gratuito</span>\n            <p className='ContentApp--subtitle-icon'>\n              O Telegram é grátis para sempre. Sem anúncios. Nenhuma taxa de\n              assinatura.\n            </p>\n          </div>\n\n          <div className='ContentApp--items'>\n            <p>\n              <i className='fas fa-bullhorn'></i>\n            </p>\n            <span className='ContentApp--title-icon'>\n              Nós podemos fazer isso\n            </span>\n            <p className='ContentApp--subtitle-icon'>\n              Ajude a tornar as mensagens seguras novamente - divulgue o\n              Telegram!\n            </p>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  </div>\n);\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://blogdoiphone.com/wp-json/wp/v2/'\n});\n","import React, { Component } from 'react';\nimport API from 'services/api';\nimport { CardImg, CardBody, CardTitle, CardSubtitle, Button } from 'reactstrap';\nimport format from 'date-fns/format';\n\nclass Blog extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      post: []\n    };\n  }\n\n  componentDidMount = () => {\n    this.setState({ isLoading: true });\n    this.getPosts();\n  };\n\n  getPosts = () => {\n    API.get('/posts?search=telegram').then(res => {\n      this.setState({ post: [res.data], isLoading: false });\n    });\n  };\n\n  getImgWithRegex = text => {\n    let regexRule = new RegExp(/\\b(https?:\\/\\/\\S+(?:png|jpe?g|gif)\\S*)\\b/);\n    let results = regexRule.exec(text);\n    if (results) return results[0];\n    return 'https://via.placeholder.com/400';\n  };\n\n  render = () => {\n    let dateFormat = 'DD/MM/YYYY - HH:MM'; // Date output format\n    const page = this.state.post.map((post, key) => {\n      return (\n        <div className='blog' key={key}>\n          <p className='blog--section--title'>Blog</p>\n          <span className='blog--section--subtitle'>\n            Novidades e notícias sobre o Telegram\n          </span>\n          <div className='container'>\n            <div className='row'>\n              <div className='col-sm-4'>\n                <div className='blog--card'>\n                  <div className='blog--card__front'>\n                    <div className='card'>\n                      <CardImg\n                        top\n                        width='100%'\n                        src={this.getImgWithRegex(post[0].content.rendered)}\n                        alt='Imagem do Post'\n                      />\n                      <div className='card-body'>\n                        <CardSubtitle className='blog--date'>\n                          <span>{format(post[0].date, dateFormat)}</span>\n                        </CardSubtitle>\n\n                        <CardTitle className='blog--postname'>\n                          <span>\n                            {post[0].title.rendered.replace('&#8211;', '–')}\n                          </span>\n                        </CardTitle>\n                      </div>\n                    </div>\n                  </div>\n                  <div className='blog--card__back'>\n                    <p className='blog--post--descript'>\n                      {post[0].excerpt.rendered.substr(3, 160) + '...'}\n                    </p>\n                    <a\n                      target='_blank'\n                      rel='noopener noreferrer'\n                      href={post[0].guid.rendered}\n                    >\n                      <Button size='sm'>Continuar lendo</Button>\n                    </a>\n                    <div className='blog--social'>\n                      <span className='blog--social__icon'>\n                        <i className='fab fa-telegram'></i>Compartilhar\n                      </span>\n                      <span className='blog--social__icon'>\n                        <i className='fab fa-twitter'></i>Tweet\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className='col-sm-4'>\n                <div className='blog--card'>\n                  <div className='blog--card__front'>\n                    <div className='card'>\n                      <CardImg\n                        top\n                        width='100%'\n                        src={this.getImgWithRegex(post[1].content.rendered)}\n                        alt='Imagem do Post'\n                      />\n                      <CardBody>\n                        <CardSubtitle className='blog--date'>\n                          <span>{format(post[1].date, dateFormat)}</span>\n                        </CardSubtitle>\n                        <CardTitle className='blog--postname'>\n                          {post[1].title.rendered.replace('&#8211;', '–')}\n                        </CardTitle>\n                      </CardBody>\n                    </div>\n                  </div>\n                  <div className='blog--card__back'>\n                    <p className='blog--post--descript'>\n                      {post[1].excerpt.rendered.substr(3, 160) + '...'}\n                    </p>\n                    <a\n                      target='_blank'\n                      rel='noopener noreferrer'\n                      href={post[1].guid.rendered}\n                    >\n                      <Button size='sm'>Continuar lendo</Button>\n                    </a>\n                    <div className='blog--social'>\n                      <span className='blog--social__icon'>\n                        <i className='fab fa-telegram'></i>Compartilhar\n                      </span>\n                      <span className='blog--social__icon'>\n                        <i className='fab fa-twitter'></i>Tweet\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className='col-sm-4'>\n                <div className='blog--card'>\n                  <div className='blog--card__front'>\n                    <div className='card'>\n                      <CardImg\n                        top\n                        width='100%'\n                        src={this.getImgWithRegex(post[2].content.rendered)}\n                        alt='Imagem do Post'\n                      />\n                      <CardBody>\n                        <CardSubtitle className='blog--date'>\n                          <span>{format(post[2].date, dateFormat)}</span>\n                        </CardSubtitle>\n                        <CardTitle className='blog--postname'>\n                          {post[2].title.rendered.replace('&#8211;', '–')}\n                        </CardTitle>\n                      </CardBody>\n                    </div>\n                  </div>\n                  <div className='blog--card__back'>\n                    <p className='blog--post--descript'>\n                      {post[2].excerpt.rendered.substr(3, 160) + '...'}\n                    </p>\n                    <a\n                      target='_blank'\n                      rel='noopener noreferrer'\n                      href={post[2].guid.rendered}\n                    >\n                      <Button size='sm'>Continuar lendo</Button>\n                    </a>\n                    <div className='blog--social'>\n                      <span className='blog--social__icon'>\n                        <i className='fab fa-telegram'></i>Compartilhar\n                      </span>\n                      <span className='blog--social__icon'>\n                        <i className='fab fa-twitter'></i>Tweet\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    });\n    return page;\n  };\n}\n\nexport default Blog;\n","import React from 'react';\n\nexport default () => (\n  <div className='Featured'>\n    <div className='container'>\n      <p className='Featured--title'>\n        O que a mídia tem a dizer sobre o Telegram:\n      </p>\n      <span>\n        Confira o que os maiores portais de tecnologia pensam a nosso respeito\n      </span>\n      <div className='Featured--icons'>\n        <img\n          alt='Uol'\n          className='Featured--icons__uol'\n          src='https://bit.ly/2If3kSd'\n        />\n        <img\n          alt='Mac Magazine'\n          className='Featured--icons__macmagazine'\n          src='https://bit.ly/2tseEop'\n        />\n        <img\n          alt='Tableless'\n          className='Featured--icons__tableless'\n          src='https://bit.ly/2K5cIJH'\n        />\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nexport default () => (\n  <div className='footerApp'>\n    <div className='container'>\n      <div className='row'>\n        <div className='col-sm-4 offset-sm-1'>\n          <p className='footerApp--tg-logo'>\n            <i className='fab fa-telegram'></i> telegram\n          </p>\n          <span className='footerApp--tg-logo__descript'>\n            Telegram é um aplicativo de mensagens baseado em nuvem com foco em\n            segurança e velocidade.\n          </span>\n        </div>\n\n        <div className='col-sm-2'>\n          <p className='footerApp--title'>Sobre</p>\n          <div className='footerApp--links'>\n            <span>Sobre</span>\n            <span>Blog</span>\n            <span>FAQ</span>\n            <span>Contacte-nos</span>\n          </div>\n        </div>\n        <div className='col-sm-2'>\n          <p className='footerApp--title'>Download</p>\n          <div className='footerApp--links'>\n            <span>iPhone/iPad</span>\n            <span>Android</span>\n            <span>Windows Phone</span>\n            <span>Pc/Mac/Linux</span>\n          </div>\n        </div>\n        <div className='col-sm-2'>\n          <p className='footerApp--title'>Plataforma</p>\n\n          <div className='footerApp--links'>\n            <span>Telegram API</span>\n            <span>Protocolo</span>\n            <span>Telegram Bots</span>\n            <span>Help</span>\n          </div>\n        </div>\n      </div>\n      <div className='container'>\n        <div className='footerApp--bottom'>\n          <hr />\n          <span className='telegram-inc'>\n            © {new Date().getFullYear()} telegram Inc.\n          </span>\n          <span className='footerApp--author'>\n            Desenvolvido por{' '}\n            <a\n              href='https://brunosousa.dev'\n              target='_blank'\n              rel='noopener noreferrer'\n            >\n              Bruno Sousa\n            </a>\n            .\n          </span>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n","import React, { Component } from 'react';\nimport Navbar from 'components/Navbar';\nimport BannerHome from 'components/BannerHome';\nimport ContentApp from 'components/ContentApp';\nimport Pros from 'components/Pros';\nimport Blog from 'components/Blog';\nimport Featured from 'components/Featured';\nimport FooterApp from 'components/Footer';\nimport ReactGA from 'react-ga';\n\nexport default class Home extends Component {\n  componentDidMount() {\n    ReactGA.initialize('UA-121994767-1'); // Google Analytics\n    ReactGA.pageview(window.location.pathname + window.location.search); // Google Analytics\n  }\n  render() {\n    return (\n      <div className='App'>\n        <Navbar />\n        <BannerHome />\n        <ContentApp />\n        <Pros />\n        <Blog />\n        <Featured />\n        <FooterApp />\n      </div>\n    );\n  }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from 'views/Home';\nimport './assets/scss/index.scss';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<Home />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}